/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.31
 * Generated at: 2020-04-16 00:44:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class header_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- Bootstrap core CSS -->\r\n");
      out.write("\t<link href=\"/myshop/resources/vendor/bootstrap/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- Custom styles for this template -->\r\n");
      out.write("\t<link href=\"/myshop/resources/css/shop-homepage.css\" rel=\"stylesheet\">\r\n");
      out.write("  <!-- Bootstrap core JavaScript -->\r\n");
      out.write("  <script src=\"/myshop/resources/vendor/jquery/jquery.min.js\"></script>\r\n");
      out.write("  <script src=\"/myshop/resources/vendor/bootstrap/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("  <!-- Navigation -->\r\n");
      out.write("  <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("      <a class=\"navbar-brand\" href=\"/myshop\">Myshop</a>\r\n");
      out.write("      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("        <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("      </button>\r\n");
      out.write("      <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n");
      out.write("        <ul class=\"navbar-nav ml-auto\">\r\n");
      out.write("          <li class=\"nav-item active\">\r\n");
      out.write("            <a class=\"nav-link\" href=\"#\">Home\r\n");
      out.write("              <span class=\"sr-only\">(current)</span>\r\n");
      out.write("            </a>\r\n");
      out.write("          </li>\r\n");
      out.write("          <li class=\"nav-item\">\r\n");
      out.write("            <a class=\"nav-link\" href=\"#\">About</a>\r\n");
      out.write("          </li>\r\n");
      out.write("          <li class=\"nav-item\">\r\n");
      out.write("            <a class=\"nav-link\" href=\"#\">회원가입</a>\r\n");
      out.write("          </li>\r\n");
      out.write("          <li class=\"nav-item\">\r\n");
      out.write("            <a class=\"nav-link\" href=\"#\">로그인</a>\r\n");
      out.write("          </li>\r\n");
      out.write("        </ul>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </nav>\r\n");
      out.write("<!-- registerModal -->\r\n");
      out.write("<div class=\"modal fade\" id=\"registerModal\" tabindex=\"-1\" role=\"dialog\"\r\n");
      out.write("\taria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("\t<div class=\"modal-dialog\">\r\n");
      out.write("\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t<div class=\"modal-header justify-content-center font-weight-light my-4\">\r\n");
      out.write("\t\t\t\t<h3 class=\"modal-title\" id=\"myModalLabel\">회원가입</h3>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t            <form id=\"registerForm\" action=\"/myapp/member/register\" method=\"post\">\r\n");
      out.write("\t            <input type=\"hidden\" name=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.parameterName }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${_csrf.token }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("\t            <input type=\"hidden\" name=\"idcheck\" id=\"idcheck\" value=\"0\">\r\n");
      out.write("\t                <div class=\"form-group\">\r\n");
      out.write("\t              \t  <label class=\"small mb-1\" for=\"userid\">ID</label>\r\n");
      out.write("\t\t\t\t\t  <div class=\"input-group\">\r\n");
      out.write("\t              \t  \t<input class=\"form-control input-group-prepend regsiterInput\" name=\"userid\" id=\"userid\" type=\"text\" placeholder=\"아이디를 입력하세요\" />\r\n");
      out.write("\t               \t \t<button type=\"button\" id=\"idcheckBtn\" class=\"btn btn-outline-info input-group-append\">중복체크</button>\r\n");
      out.write("\t\t              </div>\r\n");
      out.write("\t                </div>\r\n");
      out.write("\t                <div class=\"form-group\">\r\n");
      out.write("\t\t                <label class=\"small mb-1\" for=\"userpw\">Password</label>\r\n");
      out.write("\t\t                <input class=\"form-control regsiterInput\" name=\"userpw\" id=\"userpw\" type=\"password\" placeholder=\"패스워드를 입력하세요\" />\r\n");
      out.write("\t                </div>\r\n");
      out.write("\t                <div class=\"form-group\">\r\n");
      out.write("\t\t                <label class=\"small mb-1\" for=\"userpw\">Password 확인</label>\r\n");
      out.write("\t\t                <input class=\"form-control regsiterInput\" id=\"pwdcheck\" type=\"password\" placeholder=\"패스워드를 입력하세요\" />\r\n");
      out.write("\t                </div>\r\n");
      out.write("   \t                <div class=\"form-group\">\r\n");
      out.write("\t\t                <label class=\"small mb-1\" for=\"username\">이름</label>\r\n");
      out.write("\t\t                <input class=\"form-control regsiterInput\" name=\"username\" id=\"username\" type=\"text\" placeholder=\"이름을 입력하세요\" />\r\n");
      out.write("\t                </div>\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"small mb-1\">우편번호</label>\r\n");
      out.write("\t\t\t\t\t\t<input class=\"form-control regsiterInput\" type=\"text\" name=\"zipNo\" id=\"zipNo\" readonly=\"readonly\">\r\n");
      out.write("\t\t\t\t\t</div>\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"small mb-1\">주소</label>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"input-group\">\r\n");
      out.write("\t\t\t\t\t\t\t<input class=\"form-control input-group-prepend regsiterInput\" type=\"text\" name=\"addr\" id=\"addr\" readonly=\"readonly\">\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"button\" id=\"addrBtn\" onclick=\"javascript:goPopup()\"\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"btn btn-outline-primary input-group-apeend\">주소 검색</button>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t                <div class=\"form-group\">\r\n");
      out.write("\t                    <div class=\"custom-control custom-radio\">\r\n");
      out.write("\t                    <input class=\"custom-control-input\" checked=\"checked\" type=\"radio\" value=\"ROLE_ADMIN\" name=\"auth\" id=\"radio\"/>\r\n");
      out.write("\t                    <label class=\"custom-control-label\" for=\"radio\">관리자</label>\r\n");
      out.write("\t                    </div>\r\n");
      out.write("\t                    <div class=\"custom-control custom-radio\">\r\n");
      out.write("\t                    <input class=\"custom-control-input\" type=\"radio\" name=\"auth\" value=\"ROLE_USER\" id=\"radio2\"/>\r\n");
      out.write("\t                    <label class=\"custom-control-label\" for=\"radio2\">유저</label>\r\n");
      out.write("\t                    </div>\r\n");
      out.write("\t                </div>\r\n");
      out.write("\t                <div class=\"form-group mt-4 mb-0\">\r\n");
      out.write("\t                \t<button class=\"btn btn-primary float-right\" id=\"registerBtn\">회원가입</button>\r\n");
      out.write("\t                </div>\r\n");
      out.write("\t            </form>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- /.modal-content -->\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- /.modal-dialog -->\r\n");
      out.write("</div>\r\n");
      out.write("<!-- /.modal --> ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
